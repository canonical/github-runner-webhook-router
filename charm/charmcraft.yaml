# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: github-runner-webhook-router

type: charm

bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
    run-on:
    - name: ubuntu
      channel: "22.04"

summary: A webserver which forwards webhooks from Github to a mq.

description: |
    The github-runner-webhook-router is a simple Flask application that listens for incoming webhooks
    from GitHub and places a translation of those in a message queue for a runner to pick up and process.
    It is intended to be used together with the Github Runner operator in reactive mode.

extensions:
  - flask-framework

requires:
  mongodb:
    optional: false
    interface: mongodb_client
    limit: 1


config:
  options:
    default-flavour:
        type: string
        description: "The flavour to use when no labels except the default are provided."
        required: true
    default-self-hosted-labels:
      type: string
      description: >-
        Comma-separated list of labels to ignore during routing, as they apply to all self-hosted flavours.
      default: "self-hosted,linux"
    # The following config option is likely to be removed in the future and replaced by integration with the github-runner charm.
    flavours:
         type: string
         description: |
            YAML configuration of the assignment of labels to flavours to which the job is to be routed.
            The format is comprised of a list of flavors with respective labels:
            - flavour1: [label1, label2]
            - flavour2: [label1, label3]
            If a job matches multiple flavours, the first flavour matching defined in this configuration will be used.
            Note that labels are treated case-insensitive.
         required: true
    github_app_id:
      description: >-
        The app or client ID of the GitHub App to use for communication with GitHub,
        if webhook redelivery functionality is desired.
        If provided, the other github_app_* options must also be provided.
        The Github App needs to have read permission for Webhooks.
        Either this or the github_token must be provided if webhook redelivery functionality is desired.
      type: string
    github_app_installation_id:
      description: >-
        The app or client ID of the GitHub App to use for communication with GitHub,
        if webhook redelivery functionality is desired.
        If provided, the other github_app_* options must also be provided.
        The Github App needs to have read permission for Administration. If private repositories
        are checked, the Github App does also need read permission for Contents and Pull request.
        Either this or the github_token must be provided if webhook redelivery functionality is desired.
      type: string
    github_app_private_key:
      description: >-
        The app or client ID of the GitHub App to use for communication with GitHub,
        if webhook redelivery functionality is desired.
        If provided, the other github_app_* options must also be provided.
        The Github App needs to have read permission for Administration. If private repositories
        are checked, the Github App does also need read permission for Contents and Pull request.
        Either this or the github_token must be provided if webhook redelivery functionality is desired.
      type: secret
    github-token:
      description: >-
        The token to use for communication with GitHub, if webhook redelivery functionality is desired.
        This can be a PAT with read admin:repo_hook or a fine-grained token with read permission for Webhooks. 
        Either this or the GitHub App configuration must be provided if webhook redelivery functionality is desired.
      required: false
      type: secret
    github-webhook-url:
      description: >-
        The URL of a webhook to check for failed deliveries. If this option is used, GitHub authentication details
        must also be provided. A background worker will be started which periodically checks the webhook deliveries
        for failures and adds those failed deliveries to the queue.
      type: string
    log-level:
      type: string
      description: "The log level to use for the application logs. Use any of: CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET"
      default: "INFO"
    webhook-secret:
      type: string
      description: "The secret used to validate the webhook"
